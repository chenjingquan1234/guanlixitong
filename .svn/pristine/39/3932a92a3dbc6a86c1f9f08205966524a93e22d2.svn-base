<template>
  <div id="three">
    <div class="pb-nav">
      <el-button size="small" type="info" icon="el-icon-download" @click="download()">打印</el-button>
      <el-input size="small" v-model="key_name" style="width: 20rem;"><label slot="prepend">单据编号</label></el-input>
      <el-date-picker size="small"
        v-model="begin_date"
        align="right"
        type="date"
        placeholder="开始日期|时间"
        :picker-options="pickerOptions">
      </el-date-picker>
      <el-date-picker size="small"
        v-model="over_date"
        align="right"
        type="date"
        placeholder="结束日期|时间"
        :picker-options="pickerOptions">
      </el-date-picker>
      <el-select size="small" v-model="store_name" clearable placeholder="所属门店" @change="store_change">
        <el-option v-for="value in store_select" :key="value.sid" :label="value.store_name" :value="value.sid"></el-option>
      </el-select>
      <el-select size="small" v-model="supplier_name" clearable placeholder="供应商" @change="supplier_change">
        <el-option v-for="value in supplier_select" :key="value.id" :label="value.supplier_name" :value="value.id"></el-option>
      </el-select>
      <el-button size="small" type="primary" @click="search()">查询</el-button>
    </div>

    <base-table :tableTitle="tableTitle" :tableData="tableData" :check_box="check_box" :operation_del_name="operation_del_name" :operation_name="operation_name" :operation_="operation_"
    @resData="resData" @handlePageChange="handlePageChange" @modify="modify" @del="del" @operat="operat" @modify-other="modifyOther" operation_other  ref="mytable" />

    <Dialog :title="'详情'" :footer="false" ref="Dialog">
      <template>
        <mytable :tableTitle="d_tableTitle" :tableData="d_tableData" :operation="operation" :paging="paging"></mytable>
      </template>
    </Dialog>
  </div>
</template>

<script>
import Dialog from "./../../other/Dialog.vue"
import mytable from "./../../mytable.vue"
import BaseTable from "../../BaseComponets/BaseTable"
export default{
  name: "three",
  components:{
    mytable,
    Dialog,
    BaseTable
  },
  data(){
    return{
      pickerOptions: {
        disabledDate(time){return time.getTime() > Date.now();},
        shortcuts: [{text: '今天',onClick(picker) {picker.$emit('pick', new Date());}},
        {text: '昨天',onClick(picker){const date = new Date();date.setTime(date.getTime() - 3600 * 1000 * 24);picker.$emit('pick', date);}},
        {text: '一周前',onClick(picker){const date = new Date();date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);picker.$emit('pick', date);}}]
      },
      tableTitle: [
        {key: "order_number", title: "单号", min_width: "100"},
        {key: "total_number", title: "数量", min_width: "100"},
        {key: "total_price", title: "金额", min_width: "100"},
        {key: "discount_money", title: "优惠", min_width: "100"},
        {key: "paid_money", title: "付款", min_width: "100"},
        {key: "unpaid_money", title: "欠款", min_width: "100"},
        {key: "ename", title: "采购员", min_width: "100"},
        {key: "supplier_name", title: "供应商", min_width: "100"},
        {key: "create_time", title: "时间", min_width: "100"},
        {key: "store_name", title: "门店", min_width: "100"},
        {key: "status", title: "状态", min_width: "100"},
        {key: "remark", title: "备注", min_width: "100"}
      ],
      tableData: [],
      d_tableTitle: [
        {key: "product_name", title: "商品名称", min_width: "100"},
        {key: "wholesale_price", title: "价格", min_width: "100"},
        {key: "quantity", title: "数量", min_width: "100"},
        {key: "total", title: "合计", min_width: "100"}
      ],
      d_tableData: [],
      check_box: false,
      operation: false,
      paging: false,
      operation_del: false,
      operation_: true,
      operation_del_name: "作废",
      operation_name: "详情",
      //数据
      key_name: "",
      begin_date: new Date(2019, 0, 1, 0, 0),
      over_date: new Date(),
      store_name: "",
      store_id: "",
      supplier_name: "",
      supplier_id: "",
    }
  },
  props:{
    "store_select": {
      type: Array,
      default: ()=>{}
    },
    "supplier_select": {
      type: Array,
      default: ()=>{}
    }
  },
  methods:{
    modifyOther(scope) {
      const id = scope.row.id
      this.$router.push({
        path: '/cgd',
        query: {id}
      })
    }, 
    search: function(){
      this.handlePageChange({search: this.key_name, sid: this.store_id, supplier_id: this.supplier_id});
    },
    download: function(){
      this.$refs.mytable.$refs.xTable.exportData({type: "csv"});
    },
    store_change: function(s){
      this.store_id = s;
    },
    supplier_change: function(s){
      this.supplier_id = s;
    },
    modify: function(row){
      if(row.row.status === "采购"){
        this.$message.warning("该订单处于采购状态 禁止修改");
        return;
      }
      this.$emit("settlement", row.row.id);
    },
    del: function(row){
      if(row.row.status === "挂单"){
        this.$message.warning("该订单处于挂单状态 禁止作废");
        return;
      }
      this.$axios.post(this.$store.state.domainName_http+"/StoreAdmin/Statistics/cancelPurchaseOrder", {id: row.row.id}, {withCredentials: true})
      .then((data)=>{
        if(data.data.code === 200){
          this.handlePageChange();
          this.$message.success(data.data.msg);
        }
        else{
          this.$message.error(data.data.msg);
        }
      })
    },
    operat: function(row){
      this.$refs.Dialog.init();
      this.$api.HttpPost("/StoreAdmin/Statistics/getOrderItems", {id: row.row.id})
      .then((data)=>{
        this.$nextTick(()=>{
          this.d_tableData = data.data.data;
          for(let i in this.d_tableData){
            this.d_tableData[i].total = this.d_tableData[i].wholesale_price * this.d_tableData[i].quantity;
          }
        })
      })
    },
    resData: function(data){
      this.tableData = data;
      for(let i in this.tableData){
        if(this.tableData[i].status == 0){
          this.tableData[i].status = "挂单";
        }
        else if(this.tableData[i].status == 1){
          this.tableData[i].status = "采购";
        }
      }
    },
    handlePageChange: function(data){
      if(data === undefined){data = {}};
      this.$refs.mytable.findList(this.$store.state.domainName_http+"/StoreAdmin/Statistics/getPurchaseOrderList", data);
    },
  }
}
</script>

<style scoped>
#three{
  margin: 1rem 5rem;
}
</style>
